name: Bookstore Automation Suite.

on:
  workflow_dispatch: # Trigger the workflow manually
    inputs:
      environment:
        description: "Target environment for execution"
        required: True
        default: "test"
      tags: # Input parameter for test scenario tags
        description: "Enter xml file name for test case execution"
        required: True
        default: "positiveTests.xml"

jobs:
  Bookstore_Automation_execution:
    runs-on: ubuntu-latest

    # Set permissions at the workflow level
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    defaults:
      run:
        shell: bash # Set the shell for the job
        working-directory: . # Set the working directory for the job

    steps:
      - name: Set up OpenJDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Checkout repo # Step to check out the repository
        uses: actions/checkout@v3

      - name: Install Allure CLI # Install Allure CLI
        run: |
          sudo curl -o allure.tar.gz -L https://github.com/allure-framework/allure2/releases/download/2.30.0/allure-2.30.0.tgz
          sudo tar -zxvf allure.tar.gz -C /opt/
          export PATH="$PATH:/opt/allure-2.30.0/bin"
          allure --version

      - name: Prepare Allure history # Step to prepare Allure history directory
        run: |
          mkdir -p ${{ vars.ALLURE_RESULTS_PATH }}

      - name: Check Maven version
        run: mvn -v

      - name: Run tests with maven # Step to run tests using pytest
        run: |
          mvn clean test -DsuiteXmlFile=${{inputs.tags}} -Denv=${{inputs.environment}}

      - name: Get Allure history # Step to retrieve Allure history
        uses: actions/checkout@v3
        if: always() # Execute even if previous steps fail
        continue-on-error: true # Continue execution even if the step fails
        with:
          ref: gh-pages # Specify the branch to retrieve Allure history from
          path: gh-pages # Set the destination path for Allure history

      - name: Allure report action # Step to generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always() # Execute even if previous steps fail
        with:
          allure_results: ${{ vars.ALLURE_RESULTS_PATH }} # Specify the directory containing Allure results
          allure_history: allure-history # Specify the directory to store Allure history
          keep_reports: 10 # Specify the number of previous reports to keep

      - name: Deploy Allure report to GitHub Pages # Step to deploy Allure report to GitHub Pages
        if: always() # Execute even if previous steps fail
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.CLASSIC_PAT }}
          publish_branch: gh-pages
          publish_dir: allure-history # Specify the directory containing the report